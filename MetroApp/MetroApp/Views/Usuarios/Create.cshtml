@model MetroApp.DataLayer.Models.Usuarios

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Registrar cuenta</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

    <link href="~/LoginContent/css/style.css" rel="stylesheet" />
    <style>
        .error-message {
            color: red;
        }
    </style>

</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <section class="ftco-section">
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-md-6 col-lg-5">
                        <div class="login-wrap py-5">
                            <div class="card">
                                <div class="card-header ">
                                    <div class="row">
                                        <h4>&nbsp;&nbsp; Creación de cuenta</h4>
                                    </div>
                                    @*<hr />*@
                                </div>
                                <div class="card-body">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        <label class="control-label">Tipo de documento</label>
                                        <div class="">
                                            <select class="form-control" name="TipoDocumento" id="TipoDocumento">
                                                <option value="1">Cedula</option>
                                                <option value="2">Pasaporte</option>
                                            </select>
                                            @Html.ValidationMessageFor(model => model.TipoDocumento, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
                                        <div class="">
                                            @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label " })
                                        <div class="">
                                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label " })
                                        <div class="">
                                            @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label " })
                                        <div class="">
                                            @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                                        <div class="">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <hr />

                                    <div class="form-group">
                                        <label class="control-label">Contraseña</label>
                                        <div class="">
                                            <input type="password" class="form-control" name="password" id="password" onchange="validatePassword()"  />
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Confirmar contraseña</label>
                                        <div class="">
                                            <input type="password" class="form-control" name="confirmPassword" id="confirmPassword" onchange="validatePassword()" />
                                            <p id="passwordError" class="error-message"></p>
                                        </div>
                                    </div>

                                </div>
                                <div class="card-footer">
                                    <div class="form-group">
                                        <div class="col-md-offset-2">
                                            <input type="submit" value="Crear" class="btn btn-success float-right" />
                                            <input type="button" value="Volver" href="@Url.Action("Login","Login")" style="margin-right:10px" class="btn btn-danger float-right" />
                                        </div>
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>
                </div>
            </div>
        </section>

    }
    
    <script>
        function validatePassword() {
            var password = document.getElementById('password').value;
            var confirmPassword = document.getElementById('confirmPassword').value;
            var passwordError = document.getElementById('passwordError');

            if (password != confirmPassword) {
                // Contraseñas no coinciden, mostrar un mensaje de error
                passwordError.textContent = 'Las contraseñas no coinciden.';
            } else {
                passwordError.textContent = '';
            }
        }
    </script>

    <script src="~/LoginContent/js/jquery.min.js"></script>
    <script src="~/LoginContent/js/popper.js"></script>
    <script src="~/LoginContent/js/bootstrap.min.js"></script>
    <script src="~/LoginContent/js/main.js"></script>
</body>
</html>
